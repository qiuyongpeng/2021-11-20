import socket
def main():
    udp_socket = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
    udp_socket.sendto(b'hello python', ('192.168.3.40', 8080))
    udp_socket.close()
def main():
    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    send_data = input('请输入任意字符:')
    udp_socket.sendto(send_data.encode('utf-8'), ('192.168.3.40', 8080))
    udp_socket.close()
def main():
    # 创建套接字
    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    # 循环发送
    while True:
        send_data = input('请输入你想要发送的数据:')
        udp_socket.sendto(send_data.encode('utf-8'), ('192.168.3.40', 8080))
        if send_data == "exit":
            break

    udp_socket.close()
def main():
    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    localhost_addr = ('', 6666)
    udp_socket.bind(localhost_addr)
while True:
    recv_data = udp_socket.recvfrom(1024)
    # 元组解包
    recv_msg, recv_addr = recv_data
    print(recv_msg.decode('utf-8'), recv_addr)
def send_msg(udp_socket):
    msg = input('请输入你想要发送的消息:')
    udp_socket.sendto(msg.encode('utf-8'), ('192.168.3.40', 8080))
def recv_msg(udp_socket):
    # 接收
    msg = udp_socket.recvfrom(1024)
    # 解码
    recv_msg = msg[0].decode('utf-8')
    print(recv_msg)
def main():
    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    udp_socket.bind(('', 6666))

    while True:
        op_num = input('请输入要操作的功能序号 [1.发送消息 2.接收消息]:' )
        # 根据用户输入的数字去调用相关的功能
        if op_num == "1":
            send_msg(udp_socket)
        elif op_num == "2":
            recv_msg(udp_socket)
        else:
            print('输入有误, 请重新输入...')
if __name__ == '__main__':
    main()
